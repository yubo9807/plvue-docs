import { Component } from "./type";
/**
 * 可以直接赋值给 dom 节点
 * @param value
 * @returns
 */
export declare function isAssignmentValueToNode(value: any): value is string;
/**
 * 可进行响应式改变的属性
 * @param attr
 */
export declare function isReactiveChangeAttr(attr: string): boolean;
/**
 * 是否为一个真实 dom 对象
 * @param o
 * @returns
 */
export declare function isRealNode(o: any): boolean;
/**
 * 是否为一个组件
 * @param o
 * @returns
 */
export declare function isComponent(tag: any): tag is Component;
/**
 * 是否为一个类声明组件
 * @param o
 * @returns
 */
export declare function isClassComponent(comp: Component): any;
/**
 * 不进行渲染的值
 * @param value
 * @returns
 */
export declare function noRenderValue(value: any): boolean;
/**
 * 连接 class
 * @param args 剩余参数，类名
 * @returns
 */
export declare function joinClass(...args: (string | (() => string))[]): string;
/**
 * 创建文本节点
 * @param text
 * @returns
 */
export declare function createTextNode(text: string): Text;
export declare function appendChild(dom: Node, child: Node): void;
