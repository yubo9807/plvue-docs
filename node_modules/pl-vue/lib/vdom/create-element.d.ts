import { AnyObj } from '../utils';
import { Static, StaticOption } from "./create-html";
import type { Attrs, Children, Tree, Component } from "./type";
export interface StructureOption extends StaticOption {
    binding: Function;
}
export declare class Structure extends Static {
    #private;
    constructor(option: StructureOption);
    /**
     * 创建组件虚拟 DOM 树的函数
     * @param param0
     * @returns
     */
    render(tree: Tree): HTMLElement;
    /**
     * 创建元素
     * @param tree
     * @param
     * @returns
     */
    createElement(tree: Tree): any;
    /**
     * 组件生成节点
     * @param tag
     * @param attrs
     * @param children
     * @returns
     */
    createComponent(tag: Component, attrs: Attrs, children: Children): any;
    /**
     * 创建真实节点
     * @param tag
     * @param attrs
     * @param children
     * @returns
     */
    createRealNode(tag: string, attrs?: AnyObj, children?: Children): HTMLElement;
    /**
     * 创建节点片段
     * @param children
     * @returns
     */
    createNodeFragment(children: Children): DocumentFragment;
}
