type Option = {
    immediate?: boolean;
    deep?: boolean;
};
/**
 * 侦听器
 * @param source  响应式数据
 * @param cb      回调函数
 * @param option  配置参数
 * @returns unwatch() 取消监听
 */
export declare function watch<T>(source: () => T, cb: (newValue: T, oldValue: T) => void, option?: Option): Function;
type OnCleanup = (cleanupFn: () => void) => void;
type Callback = (onCleanup: OnCleanup) => void;
/**
 * 立即运行一个函数，同时响应式地追踪其依赖，并在依赖更改时重新执行
 * @param cb
 * @returns stop() 取消监听
 */
export declare function watchEffect(cb: Callback): () => void;
export {};
