import { AnyObj, Key, WideClass } from "./type";
export type Type = 'String' | 'Number' | 'Boolean' | 'Symbol' | 'Bigint' | 'Undefined' | 'Null' | 'regexp' | 'Date' | 'Array' | 'Object' | 'Function' | 'Promise' | 'Set' | 'Map' | 'WeakSet' | 'WeakMap' | 'WeakRef';
/**
 * 属于什么类型
 * @param o
 */
export declare function isType(o: any): Type;
/**
 * 函数是否是为类声明
 * @param func
 * @returns
 */
export declare function isClass(func: Function): func is WideClass;
/**
 * 是否属于自己的属性
 * @param target
 * @param key
 * @returns
 */
export declare function hasOwn(target: object | any[], key: Key): any;
/**
 * 判断两个值是否相等
 * @param val1
 * @param val2
 * @returns
 */
export declare function isEquals(val1: any, val2: any): boolean;
/**
 * 是否为浏览器环境
 * @returns
 */
export declare function isBrowser(): boolean;
/**
 * 是否为 object 类型，包含 class
 * @param obj
 * @returns
 */
export declare function isObject(obj: AnyObj): obj is AnyObj;
/**
 * 是否为一个普通的对象
 * @param obj
 * @returns
 */
export declare function isNormalObject(obj: AnyObj): obj is AnyObj;
/**
 * 是否为一个严格的对象
 * @param obj
 * @returns
 */
export declare function isStrictObject(obj: AnyObj): obj is AnyObj;
/**
 * 是 array 类型
 * @param obj
 * @returns
 */
export declare function isArray(arr: AnyObj): arr is any[];
/**
 * 是 string 类型
 * @param obj
 * @returns
 */
export declare function isString(text: any): text is string;
export declare function isFunction(value: any): value is Function;
